{"pages":[{"title":"About","date":"2016-10-24T02:24:00.000Z","path":"about/index.html","text":""},{"title":"Categories","date":"2018-04-23T02:20:06.190Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2018-04-23T02:20:06.201Z","path":"tags/index.html","text":""}],"posts":[{"title":"什么是微服务","date":"2018-04-19T16:28:21.000Z","path":"wiki/云计算/什么是微服务/","text":"什么是微服务微服务，又称微服务架构。是一种新兴的软件架构模式。微服务架构模式通过将多种细小的服务进行整合来形成软件，这些服务运行在自己独立的进程上，服务之间通过轻量级机制(常用的是HTTP API)进行通讯。 微服务架构与传统架构的区别传统软件架构模式是一体化架构(Monolithic Architecture)，一体化架构是指软件最终以一个整体的形态呈现出来，是一个单一的可执行程序，改变其中任何一个部分都需要重新生成和部署这个软件。而在微服务架构，服务就是一个运行的程序，运行在独立的进程上，如果你改变了某个服务涉及的代码，只需要重新部署这个服务即可。 微服务的优点 易于扩展 一体化应用进行扩展时需要针对整个应用进行扩展 ，而微服务架构可以根据服务进行扩展 便于持续交付 改变其中某个部分只需要重新生成和部署对应的服务 服务可重用 容错性更强 通过功能分散，使得应用不会轻易因为一个错误而崩溃 微服务的缺点 远程调用会有更多的延时 测试更麻烦","tags":[{"name":"微服务","slug":"微服务","permalink":"http://polyval.github.io/wiki/tags/微服务/"}],"categories":[{"name":"云计算","slug":"云计算","permalink":"http://polyval.github.io/wiki/categories/云计算/"}]}]}